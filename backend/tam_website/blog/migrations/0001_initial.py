# Generated by Django 5.2.1 on 2025-07-02 09:39

import django.db.models.deletion
import django_jalali.db.models
import parler.fields
import parler.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
        migrations.CreateModel(
            name='IpAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, help_text='Profile image of the player', null=True, upload_to='players/')),
                ('number', models.IntegerField(blank=True, help_text='The jersey number of the player', null=True)),
                ('position', models.CharField(choices=[('DEFENDER', 'مدافع'), ('MIDFIELDER', 'هافبک'), ('FORWARD', 'مهاجم'), ('GOALKEEPER', 'دروازه\u200cبان')], help_text='The position of the player on the field', max_length=20)),
                ('goals', models.IntegerField(blank=True, help_text='The number of goals scored by the player', null=True)),
                ('games', models.IntegerField(blank=True, help_text='The number of games played by the player', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='team_pictures/')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
                ('status', models.CharField(choices=[('DR', 'Draft'), ('AC', 'Accept'), ('RJ', 'Reject')], default='DR', max_length=2)),
                ('type', models.CharField(choices=[('TX', 'Text'), ('SS', 'Slide Show'), ('VD', 'Video')], default='TX', max_length=2)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('created_date', django_jalali.db.models.jDateTimeField(auto_now_add=True, help_text='Date when the article was created')),
                ('updated_date', django_jalali.db.models.jDateTimeField(auto_now=True, help_text='Date when the article was last modified')),
                ('author', models.ForeignKey(help_text='The user who wrote this article', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to=settings.AUTH_USER_MODEL)),
                ('category', models.ManyToManyField(blank=True, help_text='The category of this article', to='blog.category')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_articles', to='blog.ipaddress')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-created_date'],
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='slide-show-images')),
                ('article', models.ManyToManyField(related_name='article_images', to='blog.article')),
            ],
        ),
        migrations.CreateModel(
            name='MiddleArticleIpAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewed_articles', to='blog.article')),
                ('ipaddress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewed_articles', to='blog.ipaddress')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='hits',
            field=models.ManyToManyField(blank=True, through='blog.MiddleArticleIpAddress', to='blog.ipaddress'),
        ),
        migrations.AddField(
            model_name='article',
            name='team',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='article', to='blog.team'),
        ),
        migrations.CreateModel(
            name='ArticleTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=250, verbose_name='title')),
                ('body', models.TextField(verbose_name='body')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.article')),
            ],
            options={
                'verbose_name': 'Article Translation',
                'db_table': 'blog_article_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.category')),
            ],
            options={
                'verbose_name': 'category Translation',
                'db_table': 'blog_category_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PlayerTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(help_text='The name of the player', max_length=250)),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.player')),
            ],
            options={
                'verbose_name': 'player Translation',
                'db_table': 'blog_player_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TeamTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=250, verbose_name='name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.team')),
            ],
            options={
                'verbose_name': 'team Translation',
                'db_table': 'blog_team_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
